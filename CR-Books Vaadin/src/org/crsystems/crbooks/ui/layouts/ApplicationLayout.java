package org.crsystems.crbooks.ui.layouts;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

public class ApplicationLayout extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8661744972380461255L;
	
	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel panelMain;
	@AutoGenerated
	private VerticalLayout gridContent;
	@AutoGenerated
	private HorizontalLayout gridMenus;
	@AutoGenerated
	private MenuBar menuToolbar;
	@AutoGenerated
	private MenuBar menuLogo;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ApplicationLayout() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// gridMenus
		gridMenus = buildGridMenus();
		mainLayout.addComponent(gridMenus);
		
		// panelMain
		panelMain = buildPanelMain();
		mainLayout.addComponent(panelMain);
		mainLayout.setExpandRatio(panelMain, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildGridMenus() {
		// common part: create layout
		gridMenus = new HorizontalLayout();
		gridMenus.setImmediate(false);
		gridMenus.setWidth("100.0%");
		gridMenus.setHeight("-1px");
		gridMenus.setMargin(false);
		
		// menuLogo
		menuLogo = new MenuBar();
		menuLogo.setImmediate(false);
		menuLogo.setWidth("100.0%");
		menuLogo.setHeight("-1px");
		gridMenus.addComponent(menuLogo);
		gridMenus.setExpandRatio(menuLogo, 1.0f);
		
		// menuToolbar
		menuToolbar = new MenuBar();
		menuToolbar.setImmediate(false);
		menuToolbar.setWidth("-1px");
		menuToolbar.setHeight("-1px");
		gridMenus.addComponent(menuToolbar);
		
		return gridMenus;
	}

	@AutoGenerated
	private Panel buildPanelMain() {
		// common part: create layout
		panelMain = new Panel();
		panelMain.setImmediate(false);
		panelMain.setWidth("100.0%");
		panelMain.setHeight("100.0%");
		
		// gridContent
		gridContent = new VerticalLayout();
		gridContent.setImmediate(false);
		gridContent.setWidth("100.0%");
		gridContent.setHeight("100.0%");
		gridContent.setMargin(false);
		panelMain.setContent(gridContent);
		
		return panelMain;
	}

}
