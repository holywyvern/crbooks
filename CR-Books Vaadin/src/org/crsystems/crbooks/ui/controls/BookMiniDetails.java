package org.crsystems.crbooks.ui.controls;

import org.crsystems.crbooks.models.Author;
import org.crsystems.crbooks.models.Book;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.Resource;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

public class BookMiniDetails extends CustomComponent {

	
	private HorizontalLayout mainLayout;
	private VerticalLayout gridInfo;
	private GridLayout gridData;
	private Label labelPublisher;
	private Label labelB;
	private Label labelAuthor;
	private Label labelA;
	private HorizontalLayout gridTitle;
	private Label labelEdition;
	private Label labelTitle;
	private Panel panelImg;
	private HorizontalLayout gridImg;

	public BookMiniDetails(Book book) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		setBookData(book);
	}

	
	private void setBookData(Book book) {
		if (book.getAuthor() == null) {
			book.setAuthor(Author.getByID(1)); 
			book.update();
		}
		this.labelAuthor.setValue(book.getAuthor().getName());
		this.labelEdition.setValue(String.format("%dª edición", book.getEdition()));
		this.labelPublisher.setValue(book.getPublisher().getName());
		this.labelTitle.setValue(String.format("<h3>%s</h3>", book.getTitle()));
		Embedded data = new Embedded();
		Resource src = new ThemeResource(book.thumbName());
		data.setSource(src);
		this.gridImg.addComponent(data);
		data.setSizeFull();
	}


	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100%");
		setHeight("100%");
		
		// panelImg
		panelImg = buildPanelImg();
		mainLayout.addComponent(panelImg);
		
		// gridInfo
		gridInfo = buildGridInfo();
		mainLayout.addComponent(gridInfo);
		
		return mainLayout;
	}

	
	private Panel buildPanelImg() {
		// common part: create layout
		panelImg = new Panel();
		panelImg.setImmediate(false);
		panelImg.setWidth("-1px");
		panelImg.setHeight("-1px");
		
		// gridImg
		gridImg = new HorizontalLayout();
		gridImg.setImmediate(false);
		gridImg.setWidth("128px");
		gridImg.setHeight("128px");
		gridImg.setMargin(false);
		panelImg.setContent(gridImg);
		
		return panelImg;
	}

	
	private VerticalLayout buildGridInfo() {
		// common part: create layout
		gridInfo = new VerticalLayout();
		gridInfo.setImmediate(false);
		gridInfo.setWidth("100%");
		gridInfo.setHeight("100.0%");
		gridInfo.setMargin(false);
		gridInfo.setSpacing(true);
		
		// gridTitle
		gridTitle = buildGridTitle();
		gridInfo.addComponent(gridTitle);
		gridInfo.setExpandRatio(gridTitle, 1.0f);
		
		// gridData
		gridData = buildGridData();
		gridInfo.addComponent(gridData);
		gridInfo.setExpandRatio(gridData, 1.0f);
		
		return gridInfo;
	}

	
	private HorizontalLayout buildGridTitle() {
		// common part: create layout
		gridTitle = new HorizontalLayout();
		gridTitle.setImmediate(false);
		gridTitle.setWidth("-1px");
		gridTitle.setHeight("100.0%");
		gridTitle.setMargin(false);
		gridTitle.setSpacing(true);
		
		// labelTitle
		labelTitle = new Label();
		labelTitle.setImmediate(false);
		labelTitle.setWidth("-1px");
		labelTitle.setHeight("-1px");
		labelTitle.setValue("<h3>Título del libro</h3>");
		labelTitle.setContentMode(3);
		gridTitle.addComponent(labelTitle);
		gridTitle.setComponentAlignment(labelTitle, new Alignment(48));
		
		// labelEdition
		labelEdition = new Label();
		labelEdition.setImmediate(false);
		labelEdition.setWidth("-1px");
		labelEdition.setHeight("-1px");
		labelEdition.setValue("Label");
		gridTitle.addComponent(labelEdition);
		gridTitle.setComponentAlignment(labelEdition, new Alignment(33));
		
		return gridTitle;
	}

	
	private GridLayout buildGridData() {
		// common part: create layout
		gridData = new GridLayout();
		gridData.setImmediate(false);
		gridData.setWidth("-1px");
		gridData.setHeight("100.0%");
		gridData.setMargin(false);
		gridData.setSpacing(true);
		gridData.setColumns(2);
		gridData.setRows(2);
		
		// labelA
		labelA = new Label();
		labelA.setImmediate(false);
		labelA.setWidth("-1px");
		labelA.setHeight("-1px");
		labelA.setValue("<b>Autor:</b>");
		labelA.setContentMode(3);
		gridData.addComponent(labelA, 0, 0);
		
		// labelAuthor
		labelAuthor = new Label();
		labelAuthor.setImmediate(false);
		labelAuthor.setWidth("-1px");
		labelAuthor.setHeight("-1px");
		labelAuthor.setValue("Label");
		gridData.addComponent(labelAuthor, 1, 0);
		
		// labelB
		labelB = new Label();
		labelB.setImmediate(false);
		labelB.setWidth("-1px");
		labelB.setHeight("-1px");
		labelB.setValue("<b>Editorial:</b>");
		labelB.setContentMode(3);
		gridData.addComponent(labelB, 0, 1);
		
		// labelPublisher
		labelPublisher = new Label();
		labelPublisher.setImmediate(false);
		labelPublisher.setWidth("-1px");
		labelPublisher.setHeight("-1px");
		labelPublisher.setValue("Label");
		gridData.addComponent(labelPublisher, 1, 1);
		
		return gridData;
	}

}
