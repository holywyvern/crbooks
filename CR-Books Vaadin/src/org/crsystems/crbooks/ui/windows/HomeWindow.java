package org.crsystems.crbooks.ui.windows;

import java.io.File;
import java.util.HashMap;
import java.util.List;

import org.crsystems.crbooks.application.CRBooks;
import org.crsystems.crbooks.models.Book;
import org.crsystems.crbooks.ui.controls.BookTumbMaker;
import org.vaadin.peter.imagestrip.ImageStrip;
import org.vaadin.peter.imagestrip.ImageStrip.Image;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.StreamResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

public class HomeWindow extends CustomComponent {

	
	private HorizontalLayout mainLayout;
	private VerticalLayout gridRight;
	private Panel panelNewsStrip;
	private VerticalLayout gridNewsStrip;
	private ImageStrip stripNews;
	private Panel panelNews;
	private VerticalLayout gridNewsImage;
	private Label labelNews;
	private VerticalLayout gridLeft;
	private VerticalLayout gridOfert;
	private Panel panelOfert;
	private VerticalLayout gridStripOfert;
	private ImageStrip stripOffert;
	private Label labelOfert;
	private HorizontalLayout gridSeparator;
	private VerticalLayout gridRanking;
	private Panel panelRanking;
	private VerticalLayout gridRankingStrip;
	private ImageStrip stripRanking;
	private Label labelRanking;

	private HashMap<Integer, Image> map;
	
	public HomeWindow() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		createSliders();
	}

	
	private void createSliders() {
		createRankingSlider();
	}


	private void createRankingSlider() {
		List<Book> list = Book.getMostSoldBooks(10);
		if (list == null) return;
		map = new HashMap<Integer, Image>();
		for (Book book : list) {
			BookTumbMaker tumbMaker = new BookTumbMaker(book);
			StreamResource resource = new StreamResource(tumbMaker, String.format("book-tumb%03d.png", book.getBookID()), CRBooks.getInstance());
			this.mainLayout.addComponent(new Embedded("", resource));
			//this.stripRanking.addImage("/APP/1/book-tumb001.png");
		}
	}


	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// gridLeft
		gridLeft = buildGridLeft();
		mainLayout.addComponent(gridLeft);
		mainLayout.setExpandRatio(gridLeft, 1.0f);
		
		// gridRight
		gridRight = buildGridRight();
		mainLayout.addComponent(gridRight);
		
		return mainLayout;
	}

	
	private VerticalLayout buildGridLeft() {
		// common part: create layout
		gridLeft = new VerticalLayout();
		gridLeft.setImmediate(false);
		gridLeft.setWidth("100.0%");
		gridLeft.setHeight("100.0%");
		gridLeft.setMargin(false);
		gridLeft.setSpacing(true);
		
		// gridRanking
		gridRanking = buildGridRanking();
		gridLeft.addComponent(gridRanking);
		
		// gridSeparator
		gridSeparator = new HorizontalLayout();
		gridSeparator.setImmediate(false);
		gridSeparator.setWidth("100.0%");
		gridSeparator.setHeight("100.0%");
		gridSeparator.setMargin(false);
		gridLeft.addComponent(gridSeparator);
		gridLeft.setExpandRatio(gridSeparator, 1.0f);
		
		// gridOfert
		gridOfert = buildGridOfert();
		gridLeft.addComponent(gridOfert);
		gridLeft.setComponentAlignment(gridOfert, new Alignment(9));
		
		return gridLeft;
	}

	
	private VerticalLayout buildGridRanking() {
		// common part: create layout
		gridRanking = new VerticalLayout();
		gridRanking.setImmediate(false);
		gridRanking.setWidth("100.0%");
		gridRanking.setHeight("-1px");
		gridRanking.setMargin(false);
		gridRanking.setSpacing(true);
		
		// labelRanking
		labelRanking = new Label();
		labelRanking.setImmediate(false);
		labelRanking.setWidth("-1px");
		labelRanking.setHeight("-1px");
		labelRanking.setValue("<h2>Ranking de libros</h2>");
		labelRanking.setContentMode(3);
		gridRanking.addComponent(labelRanking);
		
		// panelRanking
		panelRanking = buildPanelRanking();
		gridRanking.addComponent(panelRanking);
		
		return gridRanking;
	}

	
	private Panel buildPanelRanking() {
		// common part: create layout
		panelRanking = new Panel();
		panelRanking.setImmediate(false);
		panelRanking.setWidth("100.0%");
		panelRanking.setHeight("-1px");
		
		// gridRankingStrip
		gridRankingStrip = buildGridRankingStrip();
		panelRanking.setContent(gridRankingStrip);
		
		return panelRanking;
	}

	
	private VerticalLayout buildGridRankingStrip() {
		// common part: create layout
		gridRankingStrip = new VerticalLayout();
		gridRankingStrip.setImmediate(false);
		gridRankingStrip.setWidth("100.0%");
		gridRankingStrip.setHeight("100.0%");
		gridRankingStrip.setMargin(false);
		
		// stripRanking
		stripRanking = new ImageStrip();
		stripRanking.setImmediate(false);
		stripRanking.setWidth("100.0%");
		stripRanking.setHeight("96px");
		gridRankingStrip.addComponent(stripRanking);
		
		return gridRankingStrip;
	}

	
	private VerticalLayout buildGridOfert() {
		// common part: create layout
		gridOfert = new VerticalLayout();
		gridOfert.setImmediate(false);
		gridOfert.setWidth("100.0%");
		gridOfert.setHeight("-1px");
		gridOfert.setMargin(false);
		gridOfert.setSpacing(true);
		
		// labelOfert
		labelOfert = new Label();
		labelOfert.setImmediate(false);
		labelOfert.setWidth("-1px");
		labelOfert.setHeight("-1px");
		labelOfert.setValue("<h2>Ofertas</h2>");
		labelOfert.setContentMode(3);
		gridOfert.addComponent(labelOfert);
		
		// panelOfert
		panelOfert = buildPanelOfert();
		gridOfert.addComponent(panelOfert);
		
		return gridOfert;
	}

	
	private Panel buildPanelOfert() {
		// common part: create layout
		panelOfert = new Panel();
		panelOfert.setImmediate(false);
		panelOfert.setWidth("100.0%");
		panelOfert.setHeight("-1px");
		
		// gridStripOfert
		gridStripOfert = buildGridStripOfert();
		panelOfert.setContent(gridStripOfert);
		
		return panelOfert;
	}

	
	private VerticalLayout buildGridStripOfert() {
		// common part: create layout
		gridStripOfert = new VerticalLayout();
		gridStripOfert.setImmediate(false);
		gridStripOfert.setWidth("100.0%");
		gridStripOfert.setHeight("100.0%");
		gridStripOfert.setMargin(false);
		
		// stripOffert
		stripOffert = new ImageStrip();
		stripOffert.setImmediate(false);
		stripOffert.setWidth("100.0%");
		stripOffert.setHeight("96px");
		gridStripOfert.addComponent(stripOffert);
		
		return gridStripOfert;
	}

	
	private VerticalLayout buildGridRight() {
		// common part: create layout
		gridRight = new VerticalLayout();
		gridRight.setImmediate(false);
		gridRight.setWidth("-1px");
		gridRight.setHeight("-1px");
		gridRight.setMargin(false);
		gridRight.setSpacing(true);
		
		// labelNews
		labelNews = new Label();
		labelNews.setImmediate(false);
		labelNews.setWidth("-1px");
		labelNews.setHeight("-1px");
		labelNews.setValue("<h2>Novedades</h2>");
		labelNews.setContentMode(3);
		gridRight.addComponent(labelNews);
		
		// panelNews
		panelNews = buildPanelNews();
		gridRight.addComponent(panelNews);
		
		// panelNewsStrip
		panelNewsStrip = buildPanelNewsStrip();
		gridRight.addComponent(panelNewsStrip);
		
		return gridRight;
	}

	
	private Panel buildPanelNews() {
		// common part: create layout
		panelNews = new Panel();
		panelNews.setImmediate(false);
		panelNews.setWidth("-1px");
		panelNews.setHeight("-1px");
		
		// gridNewsImage
		gridNewsImage = new VerticalLayout();
		gridNewsImage.setImmediate(false);
		gridNewsImage.setWidth("320px");
		gridNewsImage.setHeight("240px");
		gridNewsImage.setMargin(false);
		panelNews.setContent(gridNewsImage);
		
		return panelNews;
	}

	
	private Panel buildPanelNewsStrip() {
		// common part: create layout
		panelNewsStrip = new Panel();
		panelNewsStrip.setImmediate(false);
		panelNewsStrip.setWidth("-1px");
		panelNewsStrip.setHeight("-1px");
		
		// gridNewsStrip
		gridNewsStrip = buildGridNewsStrip();
		panelNewsStrip.setContent(gridNewsStrip);
		
		return panelNewsStrip;
	}

	
	private VerticalLayout buildGridNewsStrip() {
		// common part: create layout
		gridNewsStrip = new VerticalLayout();
		gridNewsStrip.setImmediate(false);
		gridNewsStrip.setWidth("100.0%");
		gridNewsStrip.setHeight("100.0%");
		gridNewsStrip.setMargin(false);
		
		// stripNews
		stripNews = new ImageStrip();
		stripNews.setImmediate(false);
		stripNews.setWidth("320px");
		stripNews.setHeight("96px");
		gridNewsStrip.addComponent(stripNews);
		
		return gridNewsStrip;
	}

}
