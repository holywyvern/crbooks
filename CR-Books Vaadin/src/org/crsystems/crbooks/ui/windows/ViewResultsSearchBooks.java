package org.crsystems.crbooks.ui.windows;

import java.util.List;

import org.crsystems.crbooks.models.Book;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.BaseTheme;

public class ViewResultsSearchBooks extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel panel_1;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private Table table_1=new Table();;
	@AutoGenerated
	private Label labelTittle;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public Book item;
	public SearchBooksWindow search; 
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ViewResultsSearchBooks() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);
		mainLayout.setComponentAlignment(panel_1, new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("-1px");
		panel_1.setHeight("-1px");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);
		
		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);
		
		// labelTittle
		labelTittle = new Label();
		labelTittle.setImmediate(false);
		labelTittle.setWidth("-1px");
		labelTittle.setHeight("-1px");
		labelTittle.setValue("<h2> Resultado de la Busqueda<h2>");
		labelTittle.setContentMode(3);
		verticalLayout_2.addComponent(labelTittle);
		verticalLayout_2.setComponentAlignment(labelTittle, new Alignment(20));
		
		// table_1
		
		table_1.setImmediate(true);
		createTableData();
		table_1.setWidth("-1px");
		table_1.setHeight("-1px");
		verticalLayout_2.addComponent(table_1);
		verticalLayout_2.setComponentAlignment(table_1, new Alignment(48));
		
		return verticalLayout_2;
	}
	
	public List<Book> getBooksSearch()
	{
		if(!search.textFieldLibro.getValue().toString().equals("")){
			return Book.getByTitle(search.textFieldLibro.getValue().toString());
		}
			
		
		return Book.getAll();
		
	}
	
	
	private void createTableData() {
		createTableColumns(this.table_1);
		for (Book item : getBooksSearch()) {
			table_1.addItem(itemToTable(item, true, true), item);
		}
	}
	
	protected Table createTableColumns(Table tableData) 
	{
		tableData.addContainerProperty("Nombre", String.class, null);
		tableData.addContainerProperty("Autor", String.class, null);
		tableData.addContainerProperty("Editorial", String.class, null);
		tableData.addContainerProperty("Edición", String.class, null);
		tableData.addContainerProperty("Precio", String.class, null);
		tableData.addContainerProperty("Acciones", HorizontalLayout.class, null);		
	    
		return tableData;
		
	}
	
	
	protected Object[] itemToTable(Book item, boolean showOrder, boolean showDetails) {
		
		
		return new Object[] {
				
				item.getTitle(),
				item.getAuthor().getName(),
				item.getPublisher().getName(),
				item.getEdition(),
				String.format("%.2f", item.getPrice()),
				createActionLayout11(item, showOrder)
		};
	}
	
	private Button createOrderButton(Book item) {
		
		Button buttonOrder = new Button("Pedir");
		buttonOrder.setStyleName(BaseTheme.BUTTON_LINK);
		buttonOrder.addListener(new ClickListener() {

			public void buttonClick(ClickEvent event) {
				onOrderButtonClick();
			}

			

			
		});		
		return buttonOrder;
	
	}
	private void onOrderButtonClick() {
		// TODO Auto-generated method stub
		
	}
	protected HorizontalLayout createActionLayout11(Book item, boolean showOrder) {
		
		HorizontalLayout l = new HorizontalLayout();
		
		l.addComponent(createOrderButton(item));			
		l.setSizeFull();
	
		return l;
	}
	

	

}
