package org.crsystems.crbooks.ui.windows;

import org.crsystems.crbooks.application.CRBooks;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.Tree;
import com.vaadin.ui.VerticalLayout;


public class AdministratorWindow extends CustomComponent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3109984203161042744L;

	private static AdministratorWindow current;
	
	private static final String[][] menues = {
		{"Escritorio"},
		{"Promociones","Ver Promociones","Agregar Promocion"},
		{"Consultas", "Pedidos Clientes"},
		{"Categorias", "Ver Categorias", "Agregar Categoria" },		
		{"Pagos"}
	};	
	
	private HorizontalLayout mainLayout;
	private GridLayout gridPanelData;
	private Panel panelTree;
	private VerticalLayout gridTree;
	private Tree treeMenu;
	private Label labelMenu;

	private Component lastView;

	private Component currentView;
	private String lastValue;
	
	public AdministratorWindow() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		createTreeMenues();
		addListeners();
		AdministratorWindow.current = this;
		this.changeView(new AdministratorHomeWindow());
	}

	
	public static AdministratorWindow getCurrent() {
		return AdministratorWindow.current;
	}
	
	private void addListeners() {
		for (String[] m : AdministratorWindow.menues) {
			int i = 0;
			for (String p : m) {
				treeMenu.addItem(m[i]);
				if (i != 0) {
					treeMenu.setParent(p, m[0]);
					treeMenu.setChildrenAllowed(p, false);
				}
				i++;
			}
			treeMenu.expandItemsRecursively(m[0]);
		}
	}; 


	private void createTreeMenues() {
		treeMenu.addListener(new Property.ValueChangeListener()
		 {

			public void valueChange(ValueChangeEvent event) {
				onSelectItem((treeMenu.getValue() == null) ? "" : treeMenu.getValue().toString());
			}
			
		});
	}

	protected void onSelectItem(String value) {
		if (value == lastValue) return;
		lastValue = value;
		if (value == "Escritorio") {
			this.changeView(new AdministratorHomeWindow());			
		} else if (value == "Pedidos Clientes") {
					
		} else if (value == "Ver Promociones") {
			
		} else if (value == "Agregar Promocion") {
			
		} else if (value == "Ver Categorias") {
			this.changeView(new ViewCategoriesWindow());
		}else if(value=="Agregar Categoria"){
			this.changeView(new NewCategoryWindow());
		}
		else if (value == "pagos") {
			
		} 
	}	
	

	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(true);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// panelTree
		panelTree = buildPanelTree();
		mainLayout.addComponent(panelTree);
		
		// gridPanelData
		gridPanelData = new GridLayout();
		gridPanelData.setImmediate(true);
		gridPanelData.setWidth("100.0%");
		gridPanelData.setHeight("100.0%");
		gridPanelData.setMargin(false);
		gridPanelData.setRows(1);
		gridPanelData.setColumns(1);
		mainLayout.addComponent(gridPanelData);
		mainLayout.setExpandRatio(gridPanelData, 1.0f);
		
		return mainLayout;
	}

	
	private Panel buildPanelTree() {
		// common part: create layout
		panelTree = new Panel();
		panelTree.setImmediate(true);
		panelTree.setWidth("-1px");
		panelTree.setHeight("100.0%");
		
		// gridTree
		gridTree = buildGridTree();
		panelTree.setContent(gridTree);
		
		return panelTree;
	}

	
	private VerticalLayout buildGridTree() {
		// common part: create layout
		gridTree = new VerticalLayout();
		gridTree.setImmediate(true);
		gridTree.setWidth("100.0%");
		gridTree.setHeight("100.0%");
		gridTree.setMargin(true);
		
		// labelMenu
		labelMenu = new Label();
		labelMenu.setImmediate(true);
		labelMenu.setWidth("-1px");
		labelMenu.setHeight("-1px");
		labelMenu.setValue("<h2>Menú principal</h2>");
		labelMenu.setContentMode(3);
		gridTree.addComponent(labelMenu);
		
		// treeMenu
		treeMenu = new Tree();
		treeMenu.setImmediate(true);
		treeMenu.setWidth("-1px");
		treeMenu.setHeight("100.0%");
		gridTree.addComponent(treeMenu);
		gridTree.setExpandRatio(treeMenu, 1.0f);
		
		return gridTree;
	}

	public void changeView(Component view) {
		lastView = currentView;
		currentView = view;
		gridPanelData.removeAllComponents();
		gridPanelData.addComponent(view);
	}
	
}